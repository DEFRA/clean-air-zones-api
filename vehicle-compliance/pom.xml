<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0"
  xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
  xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
  <modelVersion>4.0.0</modelVersion>
  <parent>
    <groupId>org.springframework.boot</groupId>
    <artifactId>spring-boot-starter-parent</artifactId>
    <version>2.2.12.RELEASE</version> <!-- lookup parent from repository -->
  </parent>
  <groupId>uk.gov.caz.vcc</groupId>
  <artifactId>vehicle-compliance-checker-api</artifactId>
  <version>1.0-SNAPSHOT</version>
  <name>vehicle-compliance-checker-api</name>
  <description>Template for JAQU CAZ lambda components</description>

  <properties>
    <java.version>1.8</java.version>

    <artifactFinalName>${project.artifactId}-${project.version}</artifactFinalName>

    <internal.libraries.version>2.15.1-SNAPSHOT</internal.libraries.version>

    <codeCoverage.minCoveredRatio>0.85</codeCoverage.minCoveredRatio>
    <codeCoverage.classMaxMissedCount>0</codeCoverage.classMaxMissedCount>
    <sonar.coverage.exclusions>
      **/configuration/**/*.java,
      **/Application.java,
      **/amazonaws/StreamLambdaHandler.java,
      **/amazonaws/RotateRemoteVehicleApiCredentialsHandler.java,
      **/amazonaws/CleanupOldAuditDataLambdaHandler.java,
      **/util/AwsHelpers.java,
      **/dto/**/*.java,
      **/Application.java
      **/util/VrnLogFormatter.java
    </sonar.coverage.exclusions>
    <sonar.coverage.jacoco.xmlReportPaths>
      ./target/site/jacoco-aggregate/jacoco.xml
    </sonar.coverage.jacoco.xmlReportPaths>
    <sonar.issue.ignore.multicriteria>j1,j2,j3,j4,j5,j6,j7</sonar.issue.ignore.multicriteria>
    <sonar.issue.ignore.multicriteria.j1.ruleKey>
      squid:S1075
    </sonar.issue.ignore.multicriteria.j1.ruleKey>
    <sonar.issue.ignore.multicriteria.j1.resourceKey>
      **/*.java
    </sonar.issue.ignore.multicriteria.j1.resourceKey>
    <sonar.issue.ignore.multicriteria.j2.ruleKey>
      squid:S2699
    </sonar.issue.ignore.multicriteria.j2.ruleKey>
    <sonar.issue.ignore.multicriteria.j2.resourceKey>
      **/*.java
    </sonar.issue.ignore.multicriteria.j2.resourceKey>
    <sonar.issue.ignore.multicriteria.j3.ruleKey>
      squid:S135
    </sonar.issue.ignore.multicriteria.j3.ruleKey>
    <sonar.issue.ignore.multicriteria.j3.resourceKey>
      **/VehicleEntrantsService.java
    </sonar.issue.ignore.multicriteria.j3.resourceKey>
    <sonar.issue.ignore.multicriteria.j4.ruleKey>
      squid:S5304
    </sonar.issue.ignore.multicriteria.j4.ruleKey>
    <sonar.issue.ignore.multicriteria.j4.resourceKey>
      **/*.java
    </sonar.issue.ignore.multicriteria.j4.resourceKey>
    <sonar.issue.ignore.multicriteria.j5.ruleKey>
      squid:S4823
    </sonar.issue.ignore.multicriteria.j5.ruleKey>
    <sonar.issue.ignore.multicriteria.j5.resourceKey>
      **/*.java
    </sonar.issue.ignore.multicriteria.j5.resourceKey>
    <sonar.issue.ignore.multicriteria.j6.ruleKey>
      squid:S4784
    </sonar.issue.ignore.multicriteria.j6.ruleKey>
    <sonar.issue.ignore.multicriteria.j6.resourceKey>
      **/*.java
    </sonar.issue.ignore.multicriteria.j6.resourceKey>
    <sonar.issue.ignore.multicriteria.j7.ruleKey>
      squid:S4790
    </sonar.issue.ignore.multicriteria.j7.ruleKey>
    <sonar.issue.ignore.multicriteria.j7.resourceKey>
      **/*.java
    </sonar.issue.ignore.multicriteria.j7.resourceKey>


    <cucumber.version>4.8.0</cucumber.version>

    <!-- to enable running only integration tests without unit tests -->
    <skipUnitTests>${skipTests}</skipUnitTests>
    <skipITs>${skipTests}</skipITs>
    <incorporateCucumberToIntegrationTest>true</incorporateCucumberToIntegrationTest>
    <spring-cloud.version>Greenwich.SR6</spring-cloud.version>
  </properties>

  <repositories>
    <repository>
      <id>jcenter-release</id>
      <name>jcenter</name>
      <url>https://jcenter.bintray.com/</url>
    </repository>
  </repositories>

  <dependencies>

    <!-- Internal libraries : begin -->
    <dependency>
      <groupId>uk.gov.caz</groupId>
      <artifactId>global-exception-mapper</artifactId>
      <version>${internal.libraries.version}</version>
    </dependency>
    <dependency>
      <groupId>uk.gov.caz</groupId>
      <artifactId>correlation-id</artifactId>
      <version>${internal.libraries.version}</version>
    </dependency>
    <dependency>
      <groupId>uk.gov.caz</groupId>
      <artifactId>logger</artifactId>
      <version>${internal.libraries.version}</version>
    </dependency>
    <dependency>
      <groupId>uk.gov.caz</groupId>
      <artifactId>rest-async</artifactId>
      <version>${internal.libraries.version}</version>
    </dependency>
    <dependency>
      <groupId>uk.gov.caz</groupId>
      <artifactId>aws-lambda-base</artifactId>
      <version>${internal.libraries.version}</version>
    </dependency>
    <dependency>
      <groupId>uk.gov.caz</groupId>
      <artifactId>aws-lambda-audit-cleaner</artifactId>
      <version>${internal.libraries.version}</version>
    </dependency>
    <dependency>
      <groupId>uk.gov.caz</groupId>
      <artifactId>security</artifactId>
      <version>${internal.libraries.version}</version>
    </dependency>
    <dependency>
      <groupId>uk.gov.caz</groupId>
      <artifactId>definitions</artifactId>
      <version>${internal.libraries.version}</version>
    </dependency>
    <dependency>
      <groupId>uk.gov.caz</groupId>
      <artifactId>util</artifactId>
      <version>${internal.libraries.version}</version>
    </dependency>
    <!-- Internal libraries : end -->

    <dependency>
      <groupId>com.google.guava</groupId>
      <artifactId>guava</artifactId>
      <version>28.0-jre</version>
      <scope>compile</scope>
    </dependency>

    <!-- aws-related : begin -->
    <dependency>
      <groupId>com.amazonaws.serverless</groupId>
      <artifactId>aws-serverless-java-container-springboot2</artifactId>
      <version>1.5.2</version>
    </dependency>

    <!-- Spring cloud for AWS secrets integration -->
    <dependency>
      <groupId>org.springframework.cloud</groupId>
      <artifactId>spring-cloud-starter-aws-secrets-manager-config</artifactId>
    </dependency>
    
    <dependency>
	    <groupId>com.amazonaws</groupId>
	    <artifactId>amazon-sqs-java-messaging-lib</artifactId>
	    <version>1.0.8</version>
	</dependency>
    <!-- aws-related : end -->

    <!-- Redis libraries -->
    <dependency>
      <groupId>org.springframework.boot</groupId>
      <artifactId>spring-boot-starter-data-redis</artifactId>
    </dependency>

    <!-- Spring-related : begin -->

    <dependency>
      <groupId>org.springframework.boot</groupId>
      <artifactId>spring-boot-starter-actuator</artifactId>
    </dependency>

    <dependency>
      <groupId>org.springframework.boot</groupId>
      <artifactId>spring-boot-starter-web</artifactId>
      <exclusions>
        <exclusion>
          <groupId>org.springframework.boot</groupId>
          <artifactId>spring-boot-starter-logging</artifactId>
        </exclusion>
      </exclusions>
    </dependency>

 	<dependency>
        <groupId>org.springframework.boot</groupId>
        <artifactId>spring-boot-devtools</artifactId>
        <optional>true</optional>
    </dependency>
    <!-- Spring-related : end -->

    <!-- swagger: begin -->
    <dependency>
      <groupId>io.springfox</groupId>
      <artifactId>springfox-swagger2</artifactId>
      <version>2.9.2</version>
    </dependency>

    <dependency>
      <groupId>io.springfox</groupId>
      <artifactId>springfox-swagger-ui</artifactId>
      <version>2.9.2</version>
    </dependency>

    <dependency>
      <groupId>io.springfox</groupId>
      <artifactId>springfox-bean-validators</artifactId>
      <version>2.9.2</version>
    </dependency>
    <!-- swagger: end -->

    <dependency>
      <groupId>com.fasterxml.jackson.dataformat</groupId>
      <artifactId>jackson-dataformat-xml</artifactId>
    </dependency>

    <dependency>
      <groupId>org.hibernate</groupId>
      <artifactId>hibernate-core</artifactId>
      <version>5.4.2.Final</version>
    </dependency>


    <!-- development-related: begin -->

    <dependency>
      <groupId>org.springframework.boot</groupId>
      <artifactId>spring-boot-configuration-processor</artifactId>
      <optional>true</optional>
    </dependency>
    <dependency>
      <groupId>org.projectlombok</groupId>
      <artifactId>lombok</artifactId>
      <optional>false</optional>
    </dependency>
    <dependency>
      <groupId>org.springframework.boot</groupId>
      <artifactId>spring-boot-starter-test</artifactId>
      <scope>test</scope>
      <exclusions>
        <exclusion>
          <groupId>org.junit.jupiter</groupId>
          <artifactId>junit-jupiter</artifactId>
        </exclusion>
      </exclusions>
    </dependency>
    <dependency>
      <groupId>org.junit.jupiter</groupId>
      <artifactId>junit-jupiter-engine</artifactId>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>org.springframework.boot</groupId>
      <artifactId>spring-boot-starter-data-jpa</artifactId>
    </dependency>
    <dependency>
      <groupId>org.junit.jupiter</groupId>
      <artifactId>junit-jupiter-params</artifactId>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>org.mockito</groupId>
      <artifactId>mockito-junit-jupiter</artifactId>
      <scope>test</scope>
    </dependency>
    <dependency>
	  <groupId>com.squareup.retrofit2</groupId>
	  <artifactId>retrofit-mock</artifactId>
	  <version>2.6.2</version>
	</dependency>
    <dependency>
	  <groupId>com.amazonaws.secretsmanager</groupId>
	  <artifactId>aws-secretsmanager-jdbc</artifactId>
	  <version>1.0.2</version>
    </dependency>
      <dependency>
        <groupId>org.postgresql</groupId>
        <artifactId>postgresql</artifactId>
      </dependency>
      <dependency>
        <groupId>org.liquibase</groupId>
        <artifactId>liquibase-core</artifactId>
        <version>4.8.0</version>
      </dependency>
      <dependency>
        <groupId>org.apache.commons</groupId>
        <artifactId>commons-lang3</artifactId>
        <version>3.9</version>
      </dependency>
      <dependency>
        <groupId>com.opencsv</groupId>
        <artifactId>opencsv</artifactId>
        <version>5.0</version>
      </dependency>
      <dependency>
        <groupId>com.amazonaws</groupId>
        <artifactId>aws-lambda-java-core</artifactId>
        <version>1.2.1</version>
      </dependency>
      <dependency>
        <groupId>com.amazonaws</groupId>
        <artifactId>aws-lambda-java-events</artifactId>
        <version>2.2.7</version>
      </dependency>
      <dependency>
        <groupId>com.amazonaws</groupId>
        <artifactId>aws-java-sdk-s3</artifactId>
        <version>1.11.163</version>
      </dependency>
      <dependency>
        <groupId>software.amazon.awssdk</groupId>
        <artifactId>s3</artifactId>
      </dependency>
    <!-- cucumber-testing-framework: begin -->
    <dependency>
      <groupId>io.cucumber</groupId>
      <artifactId>cucumber-java</artifactId>
      <version>${cucumber.version}</version>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>io.cucumber</groupId>
      <artifactId>cucumber-junit</artifactId>
      <version>${cucumber.version}</version>
      <exclusions>
        <exclusion>
          <groupId>junit</groupId>
          <artifactId>junit</artifactId>
        </exclusion>
      </exclusions>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>io.cucumber</groupId>
      <artifactId>cucumber-spring</artifactId>
      <version>${cucumber.version}</version>
      <scope>test</scope>
    </dependency>
    <!-- cucumber-testing-framework: end -->

    <!-- mock-server: begin -->
    <dependency>
      <groupId>org.mockito</groupId>
      <artifactId>mockito-all</artifactId>
      <version>1.10.19</version>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>org.mock-server</groupId>
      <artifactId>mockserver-netty</artifactId>
      <version>5.7.2</version>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>io.rest-assured</groupId>
      <artifactId>rest-assured</artifactId>
      <version>4.0.0</version>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>io.rest-assured</groupId>
      <artifactId>json-path</artifactId>
      <version>4.0.0</version>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>io.rest-assured</groupId>
      <artifactId>xml-path</artifactId>
      <version>4.3.1</version>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>io.rest-assured</groupId>
      <artifactId>spring-mock-mvc</artifactId>
      <version>4.0.0</version>
      <scope>test</scope>
    </dependency>
    <!-- mock-server: end -->

    <!-- development-related: end -->
  </dependencies>

  <dependencyManagement>
    <dependencies>
      <dependency>
        <groupId>org.springframework.cloud</groupId>
        <artifactId>spring-cloud-dependencies</artifactId>
        <version>${spring-cloud.version}</version>
        <type>pom</type>
        <scope>import</scope>
      </dependency>
      <dependency>
        <groupId>software.amazon.awssdk</groupId>
        <artifactId>bom</artifactId>
        <version>2.10.24</version>
        <type>pom</type>
        <scope>import</scope>
      </dependency>
    </dependencies>
  </dependencyManagement>

  <build>
    <pluginManagement>
      <plugins>
        <plugin>
          <groupId>org.sonarsource.scanner.maven</groupId>
          <artifactId>sonar-maven-plugin</artifactId>
          <version>3.4.0.905</version>
        </plugin>
      </plugins>
    </pluginManagement>
    <plugins>
      <plugin>
        <groupId>org.codehaus.mojo</groupId>
        <artifactId>build-helper-maven-plugin</artifactId>
        <version>1.12</version>
        <executions>
          <execution>
            <id>add-integration-test-sources</id>
            <phase>generate-test-sources</phase>
            <goals>
              <goal>add-test-source</goal>
            </goals>
            <configuration>
              <sources>
                <source>src/it/java</source>
              </sources>
            </configuration>
          </execution>
          <execution>
            <id>add-integration-test-resources</id>
            <phase>generate-test-resources</phase>
            <goals>
              <goal>add-test-resource</goal>
            </goals>
            <configuration>
              <resources>
                <resource>
                  <filtering>true</filtering>
                  <directory>src/it/resources</directory>
                </resource>
              </resources>
            </configuration>
          </execution>
        </executions>
      </plugin>
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-surefire-plugin</artifactId>
        <version>3.0.0-M3</version>
        <configuration>
          <skip>false</skip>
          <skipTests>${skipUnitTests}</skipTests>
          <includes>
            <include>**/*Test.java</include>
          </includes>
          <excludes>
            <exclude>**/*IT.java</exclude>
          </excludes>
        </configuration>
      </plugin>
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-failsafe-plugin</artifactId>
        <version>3.0.0-M3</version>
        <executions>
          <execution>
            <goals>
              <goal>integration-test</goal>
              <goal>verify</goal>
            </goals>
          </execution>
        </executions>
        <configuration>
          <!-- to enforce running integration tests sequentially -->
          <threadCount>1</threadCount>
          <includes>
            <include>**/*IT.java</include>
          </includes>
          <excludes>
            <exclude>**/*Test.java</exclude>
          </excludes>
        </configuration>
      </plugin>

      <plugin>
        <groupId>io.fabric8</groupId>
        <artifactId>docker-maven-plugin</artifactId>
        <version>0.30.0</version>

        <executions>
          <execution>
            <id>start</id>
            <phase>pre-integration-test</phase>
            <goals>
              <goal>build</goal>
              <goal>start</goal>
            </goals>
          </execution>
          <execution>
            <id>stop</id>
            <phase>post-integration-test</phase>
            <goals>
              <goal>stop</goal>
              <goal>remove</goal>
            </goals>
          </execution>
        </executions>

        <configuration>
          <skip>${skipLocalContainersSetup}</skip>
          <autoCreateCustomNetworks>true</autoCreateCustomNetworks>
          <images>
            <image>
              <alias>postgres-pgaudit-local</alias>
              <external>
                <type>compose</type>
                <basedir>src/it/resources</basedir>
                <composeFile>docker-compose-it.yml</composeFile>
              </external>
            </image>
          </images>
        </configuration>
      </plugin>

      <!-- code style -->
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-checkstyle-plugin</artifactId>
        <version>3.1.0</version>

        <configuration>
          <configLocation>google_checks.xml</configLocation>
          <encoding>UTF-8</encoding>
          <failOnViolation>true</failOnViolation>
          <violationSeverity>warning</violationSeverity>
          <linkXRef>false</linkXRef>
          <excludes>**/vcc/service/ChargeCalculationService.java</excludes>
        </configuration>

        <executions>
          <execution>
            <id>checkstyle-validate</id>
            <phase>validate</phase>
            <goals>
              <goal>check</goal>
              <goal>checkstyle</goal> <!-- to generate a report during the build -->
            </goals>
          </execution>
        </executions>
      </plugin>

      <!-- Build and Package -->
      <!-- don't build a jar, we'll use the classes dir -->
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-jar-plugin</artifactId>
        <version>3.1.1</version>
        <executions>
          <execution>
            <id>default-jar</id>
            <phase>none</phase>
          </execution>
        </executions>
      </plugin>
      <!-- select and copy only runtime dependencies to a temporary lib folder -->
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-dependency-plugin</artifactId>
        <version>3.1.2</version>
        <executions>
          <execution>
            <id>copy-dependencies</id>
            <phase>package</phase>
            <goals>
              <goal>copy-dependencies</goal>
            </goals>
            <configuration>
              <outputDirectory>${project.build.directory}/lib</outputDirectory>
              <includeScope>runtime</includeScope>
            </configuration>
          </execution>
        </executions>
      </plugin>
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-assembly-plugin</artifactId>
        <version>3.1.0</version>
        <executions>
          <execution>
            <id>zip-assembly</id>
            <phase>package</phase>
            <goals>
              <goal>single</goal>
            </goals>
            <configuration>
              <finalName>${artifactFinalName}</finalName>
              <descriptors>
                <descriptor>src${file.separator}assembly${file.separator}bin.xml</descriptor>
              </descriptors>
              <attach>false</attach>
            </configuration>
          </execution>
        </executions>
      </plugin>
      <plugin>
        <groupId>pl.project13.maven</groupId>
        <artifactId>git-commit-id-plugin</artifactId>
      </plugin>
    </plugins>
  </build>

  <reporting>
    <plugins>
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-checkstyle-plugin</artifactId>
        <version>3.1.0</version>
        <configuration>
          <configLocation>google_checks.xml</configLocation>
          <encoding>UTF-8</encoding>
        </configuration>
        <reportSets>
          <reportSet>
            <reports>
              <report>checkstyle</report>
            </reports>
          </reportSet>
        </reportSets>
      </plugin>

      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-pmd-plugin</artifactId>
        <version>3.12.0</version>
      </plugin>

      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-javadoc-plugin</artifactId>
        <version>3.2.0</version>
      </plugin>
    </plugins>
  </reporting>

  <profiles>
    <profile>
      <id>jacoco</id>
      <build>
        <plugins>
          <plugin>
            <groupId>org.jacoco</groupId>
            <artifactId>jacoco-maven-plugin</artifactId>
            <version>0.8.4</version>
            <configuration>
              <haltOnFailure>true</haltOnFailure>

              <excludes>
                <exclude>**/configuration/**/*.class</exclude>
                <exclude>**/Application.class</exclude>
                <exclude>**/amazonaws/StreamLambdaHandler.class</exclude>
                <exclude>**/amazonaws/StreamLambdaHandler$LambdaContainerStats.class</exclude>
                <exclude>**/amazonaws/RotateRemoteVehicleApiCredentialsHandler.class</exclude>
                <exclude>**/amazonaws/BulkCheckerHandler.class</exclude>
                <exclude>**/amazonaws/ReportingDataHandler.class</exclude>
                <exclude>**/amazonaws/CleanupOldAuditDataLambdaHandler.class</exclude>
                <exclude>**/util/AwsHelpers.class</exclude>
                <exclude>**/dto/**/*.class</exclude>
                <exclude>**/Application.class</exclude>
                <exclude>**/util/VrnLogFormatter.class</exclude>
                <exclude>**/domain/CalculationResult.class</exclude>
              </excludes>
              <rules>
                <rule>
                  <element>BUNDLE</element>
                  <limits>
                    <limit>
                      <counter>INSTRUCTION</counter>
                      <value>COVEREDRATIO</value>
                      <minimum>${codeCoverage.minCoveredRatio}</minimum>
                    </limit>
                    <limit>
                      <counter>CLASS</counter>
                      <value>MISSEDCOUNT</value>
                      <maximum>${codeCoverage.classMaxMissedCount}</maximum>
                    </limit>
                  </limits>
                </rule>
              </rules>
            </configuration>
            <executions>
              <execution>
                <id>pre-unit-test</id>
                <goals>
                  <goal>prepare-agent</goal>
                </goals>
              </execution>
              <execution>
                <id>post-unit-test</id>
                <phase>test</phase>
                <goals>
                  <goal>report</goal>
                </goals>
              </execution>
              <execution>
                <id>pre-integration-test</id>
                <goals>
                  <goal>prepare-agent-integration</goal>
                </goals>
              </execution>
              <execution>
                <id>post-integration-test</id>
                <goals>
                  <goal>report-integration</goal>
                </goals>
              </execution>
              <execution>
                <id>merge-results</id>
                <phase>verify</phase>
                <goals>
                  <goal>merge</goal>
                </goals>
                <configuration>
                  <fileSets>
                    <fileSet>
                      <directory>${project.build.directory}</directory>
                      <includes>
                        <include>*.exec</include>
                      </includes>
                      <excludes>
                        <exclude>jacoco-aggregate.exec</exclude>
                      </excludes>
                    </fileSet>
                  </fileSets>
                  <destFile>${project.build.directory}/jacoco-aggregate.exec</destFile>
                </configuration>
              </execution>
              <execution>
                <id>post-merge-report</id>
                <phase>verify</phase>
                <goals>
                  <goal>report</goal>
                </goals>
                <configuration>
                  <dataFile>${project.build.directory}/jacoco-aggregate.exec</dataFile>
                  <outputDirectory>${project.reporting.outputDirectory}/jacoco-aggregate
                  </outputDirectory>
                </configuration>
              </execution>
              <execution>
                <id>post-merge-check</id>
                <phase>verify</phase>
                <goals>
                  <goal>check</goal>
                </goals>
                <configuration>
                  <dataFile>${project.build.directory}/jacoco-aggregate.exec</dataFile>
                </configuration>
              </execution>
            </executions>
          </plugin>
        </plugins>
      </build>
    </profile>

    <profile>
      <id>artifact-final-name-overrider</id>
      <activation>
        <property>
          <name>env.BUILD_ID</name>
        </property>
      </activation>
      <properties>
        <artifactFinalName>${project.artifactId}-${env.BUILD_ID}</artifactFinalName>
      </properties>
    </profile>
    
    <profile>
			<id>security</id>
			<properties>
				<runDependencyChecks>true</runDependencyChecks>
				<skipLocalContainersSetup>true</skipLocalContainersSetup>
				<skipITs>true</skipITs>
			</properties>
			<build>
				<plugins>
					<!-- OWASP Dependency Check -->
					<plugin>
						<groupId>org.owasp</groupId>
						<artifactId>dependency-check-maven</artifactId>
						<version>6.0.1</version>
						<configuration>
							<failBuildOnCVSS>10</failBuildOnCVSS>
						</configuration>
						<executions>
							<execution>
								<goals>
									<goal>check</goal>
								</goals>
							</execution>
						</executions>
					</plugin>
				</plugins>
			</build>
		</profile>
  </profiles>
</project>
