application:
  title: National Taxi/PHV Register
  validation:
    max-errors-count: 5
  job-clean-up-request:
    queue-url: ${job.clean.up.request.queue.url:http://localhost:4576/queue/job-clean-up-request}
    max-records-count: ${job.clean.up.request.max.records.count:10000}
    message-visibility-delay-in-seconds: ${job.clean.up.request.message.visibility.delay.in.seconds:10}
    
redis:
  endpoint: localhost
  port: 7000
  ttl: 24
  enabled: false

services:
  connection-timeout-seconds: 29
  read-timeout-seconds: 29
  vehicle-compliance-checker:
    root-url: https://ndzi384gxe.execute-api.eu-west-2.amazonaws.com/dev
    cache-eviction-of-ntr-data-enabled: false

management:
  endpoints:
    web:
      base-path:
  endpoint:
    health:
      show-details: always
  health:
    diskspace:
      enabled: false

swagger:
  api:
    title: National Taxi/PHV Register Data Maintenance (API)
    description: This interface enables integration, via a RESTful API, between LA business processes and systems and the CAZ Service for the purposes of allowing LA’s to maintain details of licensed taxis and Private Hire Vehicles (PHVs) held within the National Taxi/PHV Register – a centralised and authoritative register that details all taxis and PHVs operating in the United Kingdom
    version: 0.1

  operations:
    lookup:
      description: Looks up vehicle's information about its active licences and wheelchair accessibility by VRM
    register:
      description: Register details of licensed taxis and Private Hire Vehicles (PHVs)
    reporting:
      vrms-with-active-licences:
        description: For a given licensing authority (represented by its database identifier) returns a list of VRMs which had at least one active licence in the given licensing authority on the given date. When the given licensing authority id does not exist in the database, an empty list is returned with 200 status code.
      active-license-authority-names:
        description: For a given VRM performs a check whether it had any active licences on a given paste date and if so returns names of their licensing authorities. If the licensing authority is absent in the database at the time of querying, UNKNOWN is used as its name

  model.descriptions:
    licence-info:
      active: Boolean to indicate whether a given vehicle has any active operating licence
      wheelchair-accessible: Boolean to indicate whether a given vehicle is wheelchair accessible by any active operating licence. Can be null.
      licensing-authorities-names: List of Strings that contains names of Licensing Authorities.
    vehicles:
      vehicle-details: Array containing vehicle detail objects
    vehicle:
      vrm: String containing Vehicle registration mark without whitespace
      start: ISO 8601 formatted date string indicating the date from which a license is valid
      end: ISO 8601 formatted date string indicating the date until which a license is valid
      taxi-or-phv: String to indicate if the vehicle is a taxi or PHV
      licensing-authority-name: String containing the name if the submitting licensing authority
      license-plate-number: String containing the unique reference number granted (by the licensing authority) to a vehicle
      wheelchair-accessible-vehicle: Boolean to indicate if the vehicle is wheelchair accessible or not

api:
  max-licences-count: 20000

registerjob:
  db:
    max-errors-count: 100
  lambda:
    name: RegisterCsvFromS3Function

spring:
  liquibase:
    change-log: classpath:db/changelog/db.changelog-master.yaml
    enabled: true
    drop-first: false
  datasource:
    driver-class-name: org.postgresql.Driver
    url: jdbc:postgresql://localhost:5432/caz-national-taxi-phv
    username: postgres
    password: postgres
    hikari:
      maximum-pool-size: 1

springfox:
  documentation:
    swagger:
      v2:
        path: /v1/swagger-docs